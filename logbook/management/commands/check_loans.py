from django.core.management.base import BaseCommand
from django.utils.timezone import now

from logbook.models import LineServiceHistory
from notifications.utils import notify_user


class Command(BaseCommand):
    help = "–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Å—Ç—Ä–æ–∫–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥ —ñ –Ω–∞–¥—Å–∏–ª–∞—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–±–æ –±–ª–æ–∫—É—î –∞–∫–∞—É–Ω—Ç–∏"

    def handle(self, *args, **kwargs):
        today = now().date()

        loans = LineServiceHistory.objects.filter(status='active')
        self.stdout.write(f"üîç –ó–Ω–∞–π–¥–µ–Ω–æ {loans.count()} –∞–∫—Ç–∏–≤–Ω–∏—Ö –≤–∏–¥–∞—á")

        for loan in loans:
            user = loan.service_history.reader
            days_until_return = (loan.date_when_should_return - today).days
            days_overdue = (today - loan.date_when_should_return).days

            self.stdout.write(f"üìö –ö–Ω–∏–≥–∞: {loan.book.name}")
            self.stdout.write(f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {user.email}")
            self.stdout.write(f"üìÖ –î–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è: {days_until_return} –¥–Ω—ñ–≤ | –ü—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–æ –Ω–∞: {days_overdue} –¥–Ω—ñ–≤")

            if days_until_return == 2:
                notify_user(
                    user,
                    f"–ß–µ—Ä–µ–∑ 2 –¥–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–Ω–∏–≥—É ¬´{loan.book.name}¬ª (–¥–æ {loan.date_when_should_return}).",
                    type='reminder'
                )
                self.stdout.write("üîî –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è")

            elif days_overdue == 1:
                notify_user(
                    user,
                    f"–í–∏ –ø—Ä–æ—Å—Ç—Ä–æ—á–∏–ª–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏ ¬´{loan.book.name}¬ª. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å —è–∫–æ–º–æ–≥–∞ —à–≤–∏–¥—à–µ.",
                    type='warning'
                )
                self.stdout.write("‚ö†Ô∏è –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è")

            elif 2 <= days_overdue < 7:
                notify_user(
                    user,
                    f"–í–∏ –ø—Ä–æ—Å—Ç—Ä–æ—á–∏–ª–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏ ¬´{loan.book.name}¬ª –Ω–∞ {days_overdue} –¥–Ω—ñ–≤. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å —ó—ó —è–∫–Ω–∞–π—à–≤–∏–¥—à–µ.",
                    type='warning'
                )
                self.stdout.write(f"‚ö†Ô∏è –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–µ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è (–Ω–∞ {days_overdue} –¥–Ω—ñ–≤)")

            elif days_overdue >= 7 and not user.is_blocked:
                notify_user(
                    user,
                    f"–í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–Ω—è –∫–Ω–∏–≥–∏ ¬´{loan.book.name}¬ª –Ω–∞ –ø–æ–Ω–∞–¥ 7 –¥–Ω—ñ–≤.",
                    type='block'
                )
                user.is_blocked = True
                user.save()
                self.stdout.write("‚õî –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ")
